{*******************************************************************************

  Advanced Application Controls v2.4
  FILE: acWavPlayer.pas - acWavPlayer component.

  Copyright (c) 1998-2001 UtilMind Solutions
  All rights reserved.
  E-Mail: info@utilmind.com
  WWW: http://www.utilmind.com, http://www.appcontrols.com

  The entire contents of this file is protected by International Copyright
Laws. Unauthorized reproduction, reverse-engineering, and distribution of all
or any portion of the code contained in this file is strictly prohibited and
may result in severe civil and criminal penalties and will be prosecuted to
the maximum extent possible under the law.

  Restrictions

  The source code contained within this file and all related files or any
portion of its contents shall at no time be copied, transferred, sold,
distributed, or otherwise made available to other individuals without express
written consent and permission from the UtilMind Solutions.

  Consult the End User License Agreement (EULA) for information on additional
restrictions.

*******************************************************************************}
{$I umDefines.inc}

unit acWavPlayer;

interface

uses
  Windows, Classes, Controls, Forms, MMSystem,
  acFileStorage, acClasses;

type
  TacWavPlayerSndType = (stCustom, stAsterisk, stCloseProgram,
                         stCriticalStop, stDefaultSound,
                         stExclamation, stExitWindows,
                         stMaximize, stMenuCommand, stMenuPopup,
                         stMinimize, stNewMailNotification,
                         stOpenProgram, stProgramError, stQuestion,
                         stRestoreDown, stRestoreUp, stStartWindows);

  TacWavPlayer = class(TacComponent)
  private
    FAsynchronous: Boolean;
    FLooped: Boolean;
    FSoundType: TacWavPlayerSndType;
    FWaveSound: TStoredFile;

    FOnBeforePlay: TNotifyEvent;
    FOnAfterPlay: TNotifyEvent;

    procedure SetLooped(Value: Boolean);
    procedure SetSoundType(Value: TacWavPlayerSndType);
  protected
    procedure DefineProperties(Filer: TFiler); override;
  public
    constructor Create(aOwner: TComponent); override;
    destructor Destroy; override;

    procedure Play; virtual;
    procedure Stop; virtual;
  published
    property About;

    property Asynchronous: Boolean read FAsynchronous write FAsynchronous;
    property Looped: Boolean read FLooped write SetLooped;
    property SoundType: TacWavPlayerSndType read FSoundType write SetSoundType;
    property WaveSound: TStoredFile read FWaveSound write FWaveSound;

    property OnBeforePlay: TNotifyEvent read FOnBeforePlay write FOnBeforePlay;
    property OnAfterPlay: TNotifyEvent read FOnAfterPlay write FOnAfterPlay;
  end;

implementation
